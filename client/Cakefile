require 'colors'

option '-p', '--port [PORT]', 'Set the port for devserver'
option '-m', '--minify', 'Minify output JavaScript when building'

server_color = 'cyan'
build_color = 'green'
clean_color = 'yellow'

task 'tree', 'Display project folder in a tree structure', ->
    {exec} = require 'child_process'
    exec 'tree -I node_modules', (err, stdout, stderr)-> console.log stdout

task 'clean', 'Remove all files and directories made by build', ->
    {exec} = require 'child_process'
    try exec 'rm -r honsapp.js honsapp.css lib', {cwd:__dirname}, ->
        console.log 'Project cleaned'[clean_color]

task 'devserver', 'Serves the public folder and ' +
                   'restarts the server on file change', (options)->
    
    # Server port
    port = options.port or 1338

    http = require 'http'
    fs = require 'fs'
    watchr = require 'watchr'
    
    watchr.watch './', ->
        console.log 'Something changed'[server_color]
        invoke 'clean'
        invoke 'build'

    # Clean and build first
    invoke 'clean'
    invoke 'build'

    # Create server
    http.createServer (req, res)->
        url = req.url.split('?')[0]
        served = -> console.log ('Served ' + req.url)[server_color]
        switch url
            when '/' or '/index.html'
                req.statusCode = 200
                res.setHeader 'Content-Type', 'text/html'
                res.end fs.readFileSync 'public/index.html', 'UTF-8'
                served()
            when '/honsapp.js'
                req.statusCode = 200
                res.setHeader 'Content-Type', 'text/javascript'
                try res.end fs.readFileSync 'honsapp.js', 'UTF-8'
                catch error then res.end ''
                served()
            when '/honsapp.css'
                req.statusCode = 200
                res.setHeader 'Content-Type', 'text/css'
                try res.end fs.readFileSync 'honsapp.css', 'UTF-8'
                catch error then res.end ''
                served()
            else
                req.statusCode = 404
                console.log ('Rejected ' + req.url)[server_color]

        res.end 'Error'
    .listen port

    console.log ('Listening on ' + port)[server_color]

task 'build', 'Compile the client into honsapp.js and honsapp.css', (options)->
    fs = require 'fs'
    util = require 'util'
    {exec} = require 'child_process'

    build_from_coffee = __dirname + '/src'
    build_from_styl = __dirname + '/css'
    build_to_js = __dirname + '/honsapp.js'
    build_to_css = __dirname + '/honsapp.css'

    stitch = (cb)->
        console.log 'Stitching...'[build_color]

        stitch = require 'stitch'

        package = stitch.createPackage
            paths: ['src']
            dependencies: 'vendor/' + fn for i,fn of fs.readdirSync 'vendor'
        
        # Stitch lib and write to file
        package.compile (err, source)->
            throw err if err
            fs.writeFileSync build_to_js, source, 'UTF-8'
            cb()
    
    cStylus = (cb)->
        console.log 'Compiling stylus...'[build_color]

        stylus = require 'stylus'
        indexStyl = fs.readFileSync build_from_styl + '/' + 'index.styl'

        # Render css and write file
        stylus.render indexStyl.toString(), {paths: [build_from_styl]}, 
            (err, css)->
                throw err if err
                fs.writeFileSync build_to_css, css, 'UTF-8'

                cb()

    ### Perform the build ###
    exec 'rm -r honsapp.js honsapp.css', {cwd:__dirname}, ->
        try fs.mkdirSync __dirname + '/lib'

        stitch -> cStylus ->
            console.log 'Built to honsapp.js and honsapp.css'[build_color]
            console.log 'JS was minified'[build_color] if options.minify
